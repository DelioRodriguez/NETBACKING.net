@model List<NETBACKING.CORE.APPLICATION.ViewModels.Beneficiary.BeneficiaryViewModel>

@{
Layout = "_LayoutClient";
}

<div class="container mt-5">
    <h2 class="text-center mb-4 text-primary">
        <i class="bi bi-people-fill"></i> Pago a Beneficiario
    </h2>

    <form method="post" asp-action="PagoBeneficiaries" asp-controller="Beneficiary" id="paymentForm">
        <!-- Selección del Beneficiario -->
        <div class="mb-4">
            <label for="accountNumber" class="form-label fw-bold">
                <i class="bi bi-person-fill"></i> Seleccione el Beneficiario
            </label>
            <select class="form-select shadow-sm" id="accountNumber" name="accountNumber" required>
                <option selected disabled value="">Seleccione un beneficiario</option>
                @foreach (var beneficiarios in Model)
                {
                <option value="@beneficiarios.AccountNumber">
                    @beneficiarios.FirstName @beneficiarios.LastName - Cuenta: @beneficiarios.AccountNumber
                </option>
                }
            </select>
        </div>

        <!-- Selección de Cuenta de Origen -->
        <div class="mb-4">
            <label for="originAccount" class="form-label fw-bold">
                <i class="bi bi-wallet2"></i> Cuenta de Origen
            </label>
            <select class="form-select shadow-sm" id="originAccount" name="originAccount" required>
                <option selected disabled value="">Seleccione una cuenta</option>
                @foreach (var beneficiary in Model)
                {
                if (beneficiary.Current != null)
                {
                foreach (var cuentas in beneficiary.Current)
                {
                <option value="@cuentas.UniqueIdentifier" data-balance="@cuentas.Balance">
                    Cuenta @cuentas.UniqueIdentifier - Balance: @cuentas.Balance
                </option>
                }
                }
                }
            </select>
        </div>

        <!-- Monto a Pagar -->
        <div class="mb-4">
            <label for="paymentAmount" class="form-label fw-bold">
                <i class="bi bi-currency-dollar"></i> Monto a Pagar
            </label>
            <input type="number" class="form-control shadow-sm" id="paymentAmount" name="paymentAmount" placeholder="Ingrese el monto" min="1" required>
        </div>

        <!-- Botón de Pago -->
        <button type="button" class="btn btn-primary w-100 py-2 fw-bold" onclick="confirmPayment()">
            <i class="bi bi-cash-coin"></i> Realizar Pago
        </button>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    @if (TempData["SuccessMessage"] != null)
    {
    <text>
    Swal.fire({
        icon: 'success',
        title: '¡Éxito!',
        text: '@TempData["SuccessMessage"]',
        showConfirmButton: true,
        timer: 5000
    });
    </text>
    }

    @if (TempData["ErrorMessage"] != null)
    {
    <text>
    Swal.fire({
        icon: 'error',
        title: '¡Error!',
        text: '@TempData["ErrorMessage"]',
        showConfirmButton: true,
        timer: 5000
    });
    </text>
    }

    function confirmPayment() {
        const accountNumber = document.getElementById('accountNumber').value;
        const originAccount = document.getElementById('originAccount').value;
        const paymentAmount = document.getElementById('paymentAmount').value;

        if (accountNumber && originAccount && paymentAmount) {
            Swal.fire({
                title: '¿Confirmar Pago?',
                text: `Va a realizar un pago de ${paymentAmount}. ¿Desea continuar?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, confirmar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById("paymentForm").submit();
                }
            });
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Faltan Datos',
                text: 'Por favor, complete todos los campos antes de continuar.',
            });
        }
    }
</script>
