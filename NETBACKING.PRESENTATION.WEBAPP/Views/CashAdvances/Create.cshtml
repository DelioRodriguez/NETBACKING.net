@model NETBACKING.CORE.APPLICATION.ViewModels.CashAdvance.CashAdvanceViewModel

<h2>Avance de Efectivo</h2>

<form asp-action="Create" method="post" id="advanceForm" novalidate>
    <div>
        <label asp-for="CreditCardId">Tarjeta</label>
        <select asp-for="CreditCardId" class="form-control">
            <option value="-1">Seleccione una tarjeta</option>
            @foreach (var card in Model.CreditCards)
            {
                    <option value="@card.Id" data-debt="@card.Balance">Tarjeta @card.UniqueIdentifier - Deuda: @card.Balance - Limite: @card.CreditLimit</option>
            }
        </select>
        <span asp-validation-for="CreditCardId" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="DestinationAccountId">Cuenta Destino</label>
        <select asp-for="DestinationAccountId" class="form-control">
            <option value="-1">Seleccione una cuenta</option>
            @foreach (var account in Model.SavingsAccounts)
            {
                <option value="@account.Id" data-balance="@account.Balance">Cuenta @account.UniqueIdentifier - Balance: @account.Balance</option>
            }
        </select>
        <span asp-validation-for="DestinationAccountId" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="Amount">Monto del Avance</label>
        <input asp-for="Amount" type="number" step="0.01" class="form-control" required />
        <span asp-validation-for="Amount" class="text-danger"></span>
    </div>

    <button type="button" onclick="confirmAdvance()">Realizar Avance</button>
</form>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
        function confirmAdvance() {
    const form = document.getElementById('advanceForm');
    const button = document.querySelector("button[type='button']");

    Swal.fire({
        title: '¿Confirmar Avance de Efectivo?',
        text: "Por favor, confirme para proceder con el avance de efectivo.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Sí, confirmar',
        cancelButtonText: 'Cancelar'
    }).then((result) => {
        if (result.isConfirmed) {
            button.disabled = true;
            form.submit();
        }
    });
}
    @if (TempData["SuccessMessage"] != null)
    {
        <text>
                    Swal.fire({
                        icon: 'success',
                        title: '¡Éxito!',
                        text: '@TempData["SuccessMessage"]',
                        showConfirmButton: true,
                        timer: 5000
                    });
        </text>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <text>
                    Swal.fire({
                        icon: 'error',
                        title: '¡Error!',
                        text: '@TempData["ErrorMessage"]',
                        showConfirmButton: true,
                        timer: 5000
                    });
        </text>
    }
</script>  